const readline = require('readline');

const rl = readline.createInterface({
input: process.stdin,
output: process.stdout
});

rl.question("digite o primeiro numero ", (conta1) => {
    rl.question("digite a operação ", (conta2) => {
        rl.question("digite o segundo numero ", (conta3) => {
           conta1 = Number(conta1)
           conta3 = Number(conta3)
            if(conta2 == "+"){console.log(conta1 + conta3) }else if(conta2 == "-"){console.log(conta1 - conta3)} else if(conta2 == "*"){console.log(conta1 * conta3)}else if(conta2 ==
             "/"){console.log(conta1/conta2)}else{while(true){console.log}}
             rl.close()
        })
    })
    
})
